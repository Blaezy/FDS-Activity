setwd("C:/Users/iamre/Desktop/Assignment")
setwd("C:/Users/iamre/Desktop/Assignment")
dataset=read.csv('Real estate.csv')
dataset
infoRDS(dataset)
str(dataset)
#datapreprocessing
summary(dataset$X1.transaction.date)
sum(is.na(dataset$X1.transaction.date))
sum(is.na(dataset$X2.house.age))
sum(is.na(dataset$X3.distance.to.the.nearest.MRT.station))
sum(is.na(dataset$X4.number.of.convenience.stores))
sum(is.na(dataset$X5.latitude))
sum(is.na(dataset$X6.longitude))
sum(is.na(dataset$Y.house.price.of.unit.area))
#Visual understanding of data
boxplot(dataset$X1.transaction.date, main="Boxplot of Transaction date",ylab="Date(Year)")
boxplot(dataset$X2.house.age, main="Boxplot of House Age",ylab="Years")
boxplot(dataset$X3.distance.to.the.nearest.MRT.station, main="Boxplot of distance to the nearest Station",ylab="Kilometers")
View(dataset)
View(dataset)
boxplot(dataset$X4.number.of.convenience.stores, main="Boxplot of No of Convenient Stores",ylab="Numbers")
boxplot(dataset$X5.latitude, main="Boxplot of Latitudes",ylab="Degrees")
boxplot(dataset$X6.longitude, main="Boxplot of Longitudes",ylab="Degrees")
hist(dataset$X1.transaction.date, main="Boxplot of Transaction date",ylab="Date(Year)")
hist(dataset$X2.house.age, main="Boxplot of House Age",ylab="Years")
hist(dataset$X3.distance.to.the.nearest.MRT.station, main="Boxplot of distance to the nearest Station",ylab="Kilometers")
hist(dataset$X4.number.of.convenience.stores, main="Boxplot of No of Convenient Stores",ylab="Numbers")
hist(dataset$X5.latitude, main="Boxplot of Latitudes",ylab="Degrees")
hist(dataset$X6.longitude, main="Boxplot of Longitudes",ylab="Degrees")
cor(x = dataset,use = "everything")
cor(x = dataset,use = "everything")
cor(x = dataset[2:8],use = "everything")
install packages("psych")
install.packages("psych")
library('psych')
#visualizing the relationship
pairs.panels(dataset[2:8])
pairs.panels(dataset[2:8],scale = TRUE)
#visualizing the relationship
pairs.panels(dataset[2:8],scale = TRUE,density = TRUE)
#visualizing the relationship
pairs.panels(dataset[2:8],scale = TRUE,cor = TRUE)
library(caTools)
set.seed(123)
split = sample.split(dataset$Y.house.price.of.unit.area, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor=lm(formula = dataset$Y.house.price.of.unit.area~dataset$X1.transaction.date+dataset$X2.house.age+dataset$X3.distance.to.the.nearest.MRT.station+dataset$X4.number.of.convenience.stores+dataset$X5.latitude+dataset$X6.longitude,data = training_set)
#creating the Model
regressor=lm(formula = dataset$Y.house.price.of.unit.area~.)
#creating the Model
regressor=lm(formula = dataset$Y.house.price.of.unit.area~.,data = training_set)
View(test_set)
View(test_set)
View(training_set)
View(training_set)
library(caTools)
regressor=lm(formula = dataset$Y.house.price.of.unit.area~.,data = training_set)
#creating the Model
regressor=lm(formula = dataset$Y.house.price.of.unit.area~dataset$X1.transaction.date+dataset$X2.house.age+dataset$X3.distance.to.the.nearest.MRT.station+dataset$X4.number.of.convenience.stores+dataset$X5.latitude+dataset$X6.longitude,data = training_set[2:8],)
summary(regressor)
regressor=lm(formula = dataset$Y.house.price.of.unit.area~dataset$X1.transaction.date+dataset$X2.house.age+dataset$X3.distance.to.the.nearest.MRT.station+dataset$X4.number.of.convenience.stores+dataset$X5.latitude,data = training_set[2:8])
summary(regressor)
#predicting values
y_predicted=predict(regressor,newdata = test_set[2:8])
y_predicted
View(regressor)
View(regressor)
View(test_set)
View(training_set)
y_predicted=predict(regressor,newdata = test_set[2:8])
y=predict(regressor,newdata = test_set[2:8])
y=predict(regressor,data = test_set[2:8])
y_pred=predict(regressor,data = test_set[2:8])
regressor=lm(formula = Y.house.price.of.unit.area~X1.transaction.date+X2.house.age+X3.distance.to.the.nearest.MRT.station+X4.number.of.convenience.stores+X5.latitude+X6.longitude,data = training_set[2:8],)
summary(regressor)
regressor=lm(formula = formula = Y.house.price.of.unit.area~X1.transaction.date+X2.house.age+X3.distance.to.the.nearest.MRT.station+X4.number.of.convenience.stores+X5.latitude+X6.longitude,data = training_set[2:8])
regressor=lm(formula  = Y.house.price.of.unit.area~X1.transaction.date+X2.house.age+X3.distance.to.the.nearest.MRT.station+X4.number.of.convenience.stores+X5.latitude+X6.longitude,data = training_set[2:8])
summary(regressor)
regressor=lm(formula  = Y.house.price.of.unit.area~X1.transaction.date+X2.house.age+X3.distance.to.the.nearest.MRT.station+X4.number.of.convenience.stores+X5.latitude,data = training_set[2:8])
summary(regressor)
y_pred=predict(regressor,data = test_set[2:8])
y_pred=predict(regressor,data = test_set)
dataset=dataset[2:8]
View(dataset)
View(dataset)
dataset=read.csv('Real estate.csv')
str(dataset)
dataset=dataset[2:8]
sum(is.na(dataset$X1.transaction.date))
sum(is.na(dataset$X2.house.age))
sum(is.na(dataset$X3.distance.to.the.nearest.MRT.station))
sum(is.na(dataset$X4.number.of.convenience.stores))
sum(is.na(dataset$X5.latitude))
sum(is.na(dataset$X6.longitude))
sum(is.na(dataset$Y.house.price.of.unit.area))
hist(dataset$X1.transaction.date, main="Boxplot of Transaction date",ylab="Date(Year)")
hist(dataset$X2.house.age, main="Boxplot of House Age",ylab="Years")
hist(dataset$X3.distance.to.the.nearest.MRT.station, main="Boxplot of distance to the nearest Station",ylab="Kilometers")
hist(dataset$X4.number.of.convenience.stores, main="Boxplot of No of Convenient Stores",ylab="Numbers")
hist(dataset$X5.latitude, main="Boxplot of Latitudes",ylab="Degrees")
hist(dataset$X6.longitude, main="Boxplot of Longitudes",ylab="Degrees")
cor(x = dataset,use = "everything")
library('psych')
pairs.panels(dataset[2:8],scale = TRUE)
pairs.panels(dataset,scale = TRUE)
set.seed(123)
split = sample.split(dataset$Y.house.price.of.unit.area, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(test_set)
View(test_set)
regressor=lm(formula = Y.house.price.of.unit.area~X1.transaction.date+X2.house.age+X3.distance.to.the.nearest.MRT.station+X4.number.of.convenience.stores+X5.latitude+X6.longitude,data = training_set,)
summary(regressor)
regressor=lm(formula  = Y.house.price.of.unit.area~X1.transaction.date+X2.house.age+X3.distance.to.the.nearest.MRT.station+X4.number.of.convenience.stores+X5.latitude,data = training_set)
summary(regressor)
y_pred=predict(regressor,data = training_set)
y_pred2=predict(regressor,data = test_set)
View(regressor)
View(regressor)
regressor[["fitted.values"]]
regressor[["terms"]]
y_pred2=predict(regressor,data = test_set)
y_pred2=predict(regressor,newdata = test_set)
range(dataset$Y.house.price.of.unit.area)
range(y_pred2)
library(ggplot2)
library(ggplot2)
gplot(dataset, aes(x=1:118)) +
geom_line(aes(y = test_set), color = "darkred") +
geom_line(aes(y = y_pred2), color="steelblue", linetype="twodash")
ggplot(dataset, aes(x=1:118)) +
geom_line(aes(y = test_set), color = "darkred") +
geom_line(aes(y = y_pred2), color="steelblue", linetype="twodash")
ggplot( aes(x=1:118)) +
geom_line(aes(y = test_set), color = "darkred") +
geom_line(aes(y = y_pred2), color="steelblue", linetype="twodash")
ggplot( data = dataset$Y.house.price.of.unit.area,  aes(x=1:118)) +
geom_line(aes(y = test_set), color = "darkred") +
geom_line(aes(y = y_pred2), color="steelblue", linetype="twodash")
Actual_predicted<- data.frame("Actual":test_set,"Predicted":y_pred2)
Actual_predicted<- data.frame(Actual:test_set,Predicted:y_pred2)
Actual_predicted<- data.frame("Actual","Predicted")
Actual_predicted$X.Actual=test_set
View(test_set)
View(test_set)
str(test_set)
ggplot( data = dataset,  aes(x=1:118)) +
geom_line(aes(y = test_set$Y.house.price.of.unit.area), color = "darkred") +
geom_line(aes(y = y_pred2), color="steelblue", linetype="twodash")
Actual_predicted<- data.frame("Actual":test_set$Y.house.price.of.unit.area,"Predicted":y_pred2)
str(y_pred2)
names(y_pred2)<-NULL
str(pred2)
str(y_pred2)
str(test_set$Y.house.price.of.unit.area)
Actual_predict<-data.frame("Actual":test_set$Y.house.price.of.unit.area,"Predicted":y_pred2)
Actual_predict["Actual"]=test_set$Y.house.price.of.unit.area
Actual_predict["Actual"]<-test_set$Y.house.price.of.unit.area
Actual_predict<-test_set$Y.house.price.of.unit.area
Actual_predict<-y_pred2
Matrix<-matrix(nrow = 83,ncol = 2)
str(Matrix)
Matrix[0]
Matrix[:1]=test_set$Y.house.price.of.unit.area
Matrix[1]=test_set$Y.house.price.of.unit.area
Matrix[,1]=test_set$Y.house.price.of.unit.area
Matrix[,2]=y_pred2
str(Matrix)
View(Matrix)
View(Matrix)
Actual_predicDF<-as.data.frame(Matrix)
View(Actual_predicDF)
View(Actual_predicDF)
ggplot(Actual_predicDF, aes(x=date)) +
geom_line(aes(y = V1), color = "darkred") +
geom_line(aes(y = V2), color="steelblue", linetype="twodash")
ggplot(Actual_predicDF, aes()) +
geom_line(aes(y = V1), color = "darkred") +
geom_line(aes(y = V2), color="steelblue", linetype="twodash")
ggplot(Actual_predicDF, aes(x=1:83)) +
geom_line(aes(y = V1), color = "darkred") +
geom_line(aes(y = V2), color="steelblue", linetype="twodash")
ggplot(Actual_predicDF, aes(x=1:83)) +
geom_line(aes(y = V1), color = "darkred") +
geom_line(aes(y = V2), color="steelblue", )
Matrix<-matrix(nrow = 83,ncol = 2,dimnames = "Actual","PREDICTED")
Matrix<-matrix(nrow = 83,ncol = 2,dimnames = ("Actual","PREDICTED"))
Matrix<-matrix(nrow = 83,ncol = 2,dimnames = ("Actual""PREDICTED"))
Matrix<-matrix(nrow = 83,ncol = 2,dimnames = ["Actual","PREDICTED"])
Matrix<-matrix(nrow = 83,ncol = 2,dimnames = list("Actual","Predicted"))
colnames(Matrix)<-("Actual","Predicted")
colnames(Matrix)<-c("Actual","Predicted")
View(Actual_predicDF)
View(Actual_predicDF)
View(Matrix)
View(Matrix)
Actual_predicDF<-as.data.frame(Matrix)
View(Actual_predicDF)
View(Actual_predicDF)
Actual_predictDF <-Actual_predictDF[order(actual_predictDF$Actual)]
Actual_predicDF <-Actual_predicDF[order(actual_predicDF$Actual)]
Actual_predicDF<-as.data.frame(Matrix)
Actual_predicDF <-Actual_predicDF[order(actual_predicDF$Actual)]
Actual_predicDF<-as.data.frame(Matrix)
Actual_predicDF<-Actual_predicDF[order(Actual_predicDF$Actual)]
Actual_predicDF<-Actual_predicDF[order(Actual_predicDF$Actual)]
str(Actual_predicDF)
Actual_predicDF<-Actual_predicDF[order(Actual_predicDF$Actual),]
library(ggplot2)
ggplot(Actual_predicDF,aes(x =1:nrow(dataset),color=Series)) +
geom_line(data = Actual_predicDF, aes(x =1:nrow(dataset),
y = Actual, color ="Actual")) +
geom_line(data = Actual_predicDF, aes(x =1:nrow(dataset),
y = Predicted, color ="Predicted")) +xlab('Number') +ylab('Price Per Unit Area')
library(ggplot2)
ggplot(Actual_predicDF,aes(x =1:nrow(Actual_predicDF),color=Series)) +
geom_line(data = Actual_predicDF, aes(x =1:nrow(Actual_predicDF),
y = Actual, color ="Actual")) +
geom_line(data = Actual_predicDF, aes(x =1:nrow(AActual_predicDF),
y = Predicted, color ="Predicted")) +xlab('Number') +ylab('Price Per Unit Area')
library(ggplot2)
ggplot(Actual_predicDF,aes(x =1:nrow(Actual_predicDF),color=Series)) +
geom_line(data = Actual_predicDF, aes(x =1:nrow(Actual_predicDF),
y = Actual, color ="Actual")) +
geom_line(data = Actual_predicDF, aes(x =1:nrow(Actual_predicDF),
y = Predicted, color ="Predicted")) +xlab('Number') +ylab('Price Per Unit Area')
regressor=lm(formula  = Y.house.price.of.unit.area~log(X1.transaction.date+X2.house.age+X3.distance.to.the.nearest.MRT.station+X4.number.of.convenience.stores+X5.latitude,data = training_set))
summary(regressor)
regressor=lm(formula = Y.house.price.of.unit.area~X1.transaction.date+X2.house.age+X3.distance.to.the.nearest.MRT.station+X4.number.of.convenience.stores+X5.latitude+X6.longitude,)
summary(regressor)
regressor=lm(formula = Y.house.price.of.unit.area~X1.transaction.date+X2.house.age+X3.distance.to.the.nearest.MRT.station+X4.number.of.convenience.stores+X5.latitude+X6.longitude,)
summary(regressor)
library(caTools)
set.seed(123)
split = sample.split(dataset$Y.house.price.of.unit.area, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor=lm(formula = Y.house.price.of.unit.area~X1.transaction.date+X2.house.age+X3.distance.to.the.nearest.MRT.station+X4.number.of.convenience.stores+X5.latitude+X6.longitude,)
summary(regressor)
dataset=read.csv('Real estate.csv')
str(dataset)
dataset=dataset[2:8]
summary(dataset$X1.transaction.date)
sum(is.na(dataset$X1.transaction.date))
sum(is.na(dataset$X2.house.age))
sum(is.na(dataset$X3.distance.to.the.nearest.MRT.station))
sum(is.na(dataset$X4.number.of.convenience.stores))
sum(is.na(dataset$X5.latitude))
sum(is.na(dataset$X6.longitude))
sum(is.na(dataset$Y.house.price.of.unit.area))
hist(dataset$X1.transaction.date, main="Boxplot of Transaction date",ylab="Date(Year)")
hist(dataset$X2.house.age, main="Boxplot of House Age",ylab="Years")
hist(dataset$X3.distance.to.the.nearest.MRT.station, main="Boxplot of distance to the nearest Station",ylab="Kilometers")
hist(dataset$X4.number.of.convenience.stores, main="Boxplot of No of Convenient Stores",ylab="Numbers")
hist(dataset$X5.latitude, main="Boxplot of Latitudes",ylab="Degrees")
hist(dataset$X6.longitude, main="Boxplot of Longitudes",ylab="Degrees")
cor(x = dataset,use = "everything")
library('psych')
pairs.panels(dataset,scale = TRUE)
library(caTools)
set.seed(123)
split = sample.split(dataset$Y.house.price.of.unit.area, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor=lm(formula = Y.house.price.of.unit.area~X1.transaction.date+X2.house.age+X3.distance.to.the.nearest.MRT.station+X4.number.of.convenience.stores+X5.latitude+X6.longitude,training_set)
summary(regressor)
regressor=lm(formula  = Y.house.price.of.unit.area~X1.transaction.date+X2.house.age+X3.distance.to.the.nearest.MRT.station+X4.number.of.convenience.stores+X5.latitude,training_set)
summary(regressor)
regressor=lm(formula  = log(Y.house.price.of.unit.area)~X1.transaction.date+X2.house.age+X3.distance.to.the.nearest.MRT.station+X4.number.of.convenience.stores+X5.latitude,training_set)
summary(regressor)
y_pred=predict(regressor,newdata = test_set)
str(y_pred)
library(ggplot2)
names(y_pred)<-NULL
str(y_pred)
str(test_set$Y.house.price.of.unit.area)
Matrix<-matrix(nrow = 83,ncol = 2,dimnames = list("Actual","Predicted"))
Matrix[,1]=log(test_set$Y.house.price.of.unit.area)
Matrix[,2]=y_pred
str(Matrix)
colnames(Matrix)<-c("Actual","Predicted")
Matrix<-matrix(nrow = 83,ncol = 2,dimnames = list("Actual","Predicted"))
Matrix<-matrix(nrow = 83,ncol = 2,)
Matrix[,1]=log(test_set$Y.house.price.of.unit.area)
Matrix[,2]=y_pred
str(Matrix)
colnames(Matrix)<-c("Actual","Predicted")
Actual_predicDF<-as.data.frame(Matrix)
str(Actual_predicDF)
Actual_predicDF<-Actual_predicDF[order(Actual_predicDF$Actual),]
ggplot(Actual_predicDF,aes(x =1:nrow(Actual_predicDF),color=Series)) +
geom_line(data = Actual_predicDF, aes(x =1:nrow(Actual_predicDF),
y = Actual, color ="Actual")) +
geom_line(data = Actual_predicDF, aes(x =1:nrow(Actual_predicDF),
y = Predicted, color ="Predicted")) +xlab('Number') +ylab('Price Per Unit Area')
ggplot(Actual_predicDF,aes(x =1:nrow(Actual_predicDF),color=Series)) +
geom_line(data = Actual_predicDF, aes(x =1:nrow(Actual_predicDF),
y = Actual, color ="Actual")) +
geom_line(data = Actual_predicDF, aes(x =1:nrow(Actual_predicDF),
y = Predicted, color ="Predicted")) +xlab('Number') +ylab('Log(Price Per Unit Area)')
summary(regressor)
plot(regressor)
dataset=read.csv('Real estate.csv')
str(dataset)
dataset=dataset[2:8]
View(dataset)
View(dataset)
sum(is.na(dataset$X1.transaction.date))
sum(is.na(dataset$X2.house.age))
sum(is.na(dataset$X3.distance.to.the.nearest.MRT.station))
sum(is.na(dataset$X4.number.of.convenience.stores))
sum(is.na(dataset$X5.latitude))
sum(is.na(dataset$X6.longitude))
sum(is.na(dataset$Y.house.price.of.unit.area))
hist(dataset$X1.transaction.date, main="Histogram of Transaction date",ylab="Date(Year)")
hist(dataset$X2.house.age, main="Histogram of House Age",ylab="Years")
hist(dataset$X3.distance.to.the.nearest.MRT.station, main="Histogram of distance to the nearest Station",ylab="Kilometers")
hist(dataset$X4.number.of.convenience.stores, main="Histogram of No of Convenient Stores",ylab="Numbers")
hist(dataset$X5.latitude, main="Histogram of Latitudes",ylab="Degrees")
hist(dataset$X6.longitude, main="Histogram of Longitudes",ylab="Degrees")
cor(x = dataset,use = "everything")
pairs.panels(dataset,scale = TRUE)
library('psych')
pairs.panels(dataset,scale = TRUE)
library(caTools)
set.seed(123)
split = sample.split(dataset$Y.house.price.of.unit.area, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor=lm(formula = Y.house.price.of.unit.area~X1.transaction.date+X2.house.age+X3.distance.to.the.nearest.MRT.station+X4.number.of.convenience.stores+X5.latitude+X6.longitude,training_set)
summary(regressor)
regressor=lm(formula  = Y.house.price.of.unit.area~X1.transaction.date+X2.house.age+X3.distance.to.the.nearest.MRT.station+X4.number.of.convenience.stores+X5.latitude,training_set)
summary(regressor)
regressor=lm(formula  = log(Y.house.price.of.unit.area)~X1.transaction.date+X2.house.age+X3.distance.to.the.nearest.MRT.station+X4.number.of.convenience.stores+X5.latitude,training_set)
summary(regressor)
y_pred=predict(regressor,newdata = test_set)
str(y_pred)
library(ggplot2)
names(y_pred)<-NULL
str(y_pred)
str(test_set$Y.house.price.of.unit.area)
Matrix<-matrix(nrow = 83,ncol = 2,)
Matrix[,1]=log(test_set$Y.house.price.of.unit.area)
Matrix[,2]=y_pred
str(Matrix)
colnames(Matrix)<-c("Actual","Predicted")
View(Matrix)
View(Matrix)
Actual_predicDF<-as.data.frame(Matrix)
str(Actual_predicDF)
Actual_predicDF<-Actual_predicDF[order(Actual_predicDF$Actual),]
View(Actual_predicDF)
View(Actual_predicDF)
library(ggplot2)
ggplot(Actual_predicDF,aes(x =1:nrow(Actual_predicDF),color=Series)) +
geom_line(data = Actual_predicDF, aes(x =1:nrow(Actual_predicDF),
y = Actual, color ="Actual")) +
geom_line(data = Actual_predicDF, aes(x =1:nrow(Actual_predicDF),
y = Predicted, color ="Predicted")) +xlab('Number') +ylab('Log(Price Per Unit Area)')
summary(regressor)
plot(regressor)
dataset=read.csv('Real estate.csv')
str(dataset)
dataset=dataset[2:8]
str(dataset)
sum(is.na(dataset$X1.transaction.date))
sum(is.na(dataset$X2.house.age))
sum(is.na(dataset$X3.distance.to.the.nearest.MRT.station))
sum(is.na(dataset$X4.number.of.convenience.stores))
sum(is.na(dataset$X5.latitude))
sum(is.na(dataset$X6.longitude))
sum(is.na(dataset$Y.house.price.of.unit.area))
#Handling missing data if there are any
sum(is.na(dataset$X1.transaction.date))
sum(is.na(dataset$X1.transaction.date))
sum(is.na(dataset$X2.house.age))
sum(is.na(dataset$X3.distance.to.the.nearest.MRT.station))
sum(is.na(dataset$X4.number.of.convenience.stores))
sum(is.na(dataset$X5.latitude))
sum(is.na(dataset$X6.longitude))
sum(is.na(dataset$Y.house.price.of.unit.area))
hist(dataset$X1.transaction.date, main="Histogram of Transaction date",ylab="Date(Year)")
hist(dataset$X2.house.age, main="Histogram of House Age",ylab="Years")
hist(dataset$X3.distance.to.the.nearest.MRT.station, main="Histogram of distance to the nearest Station",ylab="Kilometers")
hist(dataset$X4.number.of.convenience.stores, main="Histogram of No of Convenient Stores",ylab="Numbers")
hist(dataset$X5.latitude, main="Histogram of Latitudes",ylab="Degrees")
hist(dataset$X6.longitude, main="Histogram of Longitudes",ylab="Degrees")
cor(x = dataset,use = "everything")
cor(x = dataset,use = "everything")
cor(x = dataset,use = "everything")
library('psych')
pairs.panels(dataset,scale = TRUE)
library(caTools)
set.seed(123)
split = sample.split(dataset$Y.house.price.of.unit.area, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor=lm(formula = Y.house.price.of.unit.area~X1.transaction.date+X2.house.age+X3.distance.to.the.nearest.MRT.station+X4.number.of.convenience.stores+X5.latitude+X6.longitude,training_set)
summary(regressor)
regressor=lm(formula  = Y.house.price.of.unit.area~X1.transaction.date+X2.house.age+X3.distance.to.the.nearest.MRT.station+X4.number.of.convenience.stores+X5.latitude,training_set)
summary(regressor)
regressor=lm(formula  = log(Y.house.price.of.unit.area)~X1.transaction.date+X2.house.age+X3.distance.to.the.nearest.MRT.station+X4.number.of.convenience.stores+X5.latitude,training_set)
summary(regressor)
y_pred=predict(regressor,newdata = test_set)
names(y_pred)<-NULL
str(y_pred)
str(test_set$Y.house.price.of.unit.area)
Matrix<-matrix(nrow = 83,ncol = 2,)
Matrix[,1]=log(test_set$Y.house.price.of.unit.area)
Matrix[,2]=y_pred
str(Matrix)
colnames(Matrix)<-c("Actual","Predicted")
#creating new dataframe from the matrix and making the records in increasing order of sequence
Actual_predicDF<-as.data.frame(Matrix)
str(Actual_predicDF)
Actual_predicDF<-Actual_predicDF[order(Actual_predicDF$Actual),]
library(ggplot2)
ggplot(Actual_predicDF,aes(x =1:nrow(Actual_predicDF),color=Series)) +
geom_line(data = Actual_predicDF, aes(x =1:nrow(Actual_predicDF),
y = Actual, color ="Actual")) +
geom_line(data = Actual_predicDF, aes(x =1:nrow(Actual_predicDF),
y = Predicted, color ="Predicted")) +xlab('Number') +ylab('Log(Price Per Unit Area)')
summary(regressor)
plot(regressor)
View(test_set)
View(test_set)
View(training_set)
View(training_set)
View(Actual_predicDF)
View(Actual_predicDF)
View(Matrix)
View(Matrix)
View(regressor)
View(regressor)
View(dataset)
View(Matrix)
